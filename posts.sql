-- MySQL dump 10.11
--
-- Host: localhost    Database: tararumpum_production
-- ------------------------------------------------------
-- Server version	5.0.51a-3ubuntu5.4

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `posts` (
  `id` int(11) NOT NULL default '0',
  `body` text,
  `title` varchar(255) default NULL,
  `created_at` datetime default NULL,
  `tags` varchar(255) default NULL,
  `slug` varchar(255) default NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (1,'<p>I recently observed one weird behavior related to ruby hash methods.\nI dont know the reason behind for the implementation.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>&gt;&gt; h = { <span class=\"i\">1</span> =&gt; <span class=\"i\">2</span> , <span class=\"i\">3</span> =&gt; <span class=\"i\">4</span> , <span class=\"i\">5</span> =&gt; <span class=\"i\">6</span> }\n=&gt; {<span class=\"i\">5</span>=&gt;<span class=\"i\">6</span>, <span class=\"i\">1</span>=&gt;<span class=\"i\">2</span>, <span class=\"i\">3</span>=&gt;<span class=\"i\">4</span>}\n&gt;&gt; h.reject { |key,value| key == <span class=\"i\">5</span> }\n=&gt; {<span class=\"i\">1</span>=&gt;<span class=\"i\">2</span>, <span class=\"i\">3</span>=&gt;<span class=\"i\">4</span>}</pre></div>\n</div>\n\n\nso i believed when i call select it is going to return selected\nkeys hash. but below is the answer\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>&gt;&gt; h.select { |key,value| key == <span class=\"i\">5</span> }\n=&gt; [[<span class=\"i\">5</span>, <span class=\"i\">6</span>]]</pre></div>\n</div>','Ruby Gotcha! Hash reject is not opposite of select','2009-01-25 03:18:33',NULL,NULL),(2,'<p>If you want to use branch on git to configure your rails deployment using capistrano.you can add branch variable to deploy.rb file.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>set <span class=\"sy\">:repository</span>,<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">git@github.com:******/*****.git</span><span class=\"dl\">&quot;</span></span>\nset <span class=\"sy\">:branch</span>,<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">subbarao</span><span class=\"dl\">&quot;</span></span> </pre></div>\n</div>\n\n\n	<p>this will allow you to deploy branch rather than master on the source control.</p>','git branch for deployment using capistrano','2009-01-25 03:18:43',NULL,NULL),(3,'<p>I recently installed ruby on my mac using mac ports.</p>\n\n\n	<p>And i came across this method for array</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>&gt;&gt; array = <span class=\"s\"><span class=\"dl\">%w(</span><span class=\"k\"> a b c d </span><span class=\"dl\">)</span></span>\n=&gt; [<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">a</span><span class=\"dl\">&quot;</span></span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">b</span><span class=\"dl\">&quot;</span></span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">c</span><span class=\"dl\">&quot;</span></span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">d</span><span class=\"dl\">&quot;</span></span>]\n&gt;&gt; a.find_index { |val| val == d }\n=&gt; <span class=\"i\">3</span></pre></div>\n</div>\n\n\n	<p>i wanted to show this method to my friend. But it is not showing up on his irb. The reason being his verison of ruby is (1.8.6) different than mine.</p>\n\n\n	<p>ruby 1.8.7 (2008-08-11 patchlevel 72) [i686-darwin9].</p>\n\n\n	<p>above method is not part of 1.8.6</p>\n\n\n	<p>Although i feel we need this method part of array long ago.</p>\n\n\n	<p>so if you installed ruby recently using using mac ports be careful.</p>','mac ports ruby install will install version 1.8.7 ','2009-01-25 03:18:52',NULL,NULL),(4,'<p>If you ever looked into rails source you might have come across returning statement.</p>\n\n\n	<p>returning is one of the goodies provided by rails.</p>\n\n\n	<p>Below is the three different flavors of returning</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>  <span class=\"r\">def</span> <span class=\"fu\">returning1</span>\n   returning([]) <span class=\"r\">do</span> |returning1|\n     returning1 &lt;&lt; <span class=\"i\">23</span>\n   <span class=\"r\">end</span>\n  <span class=\"r\">end</span>\n\n  <span class=\"r\">def</span> <span class=\"fu\">returning2</span>\n   returning(returning2=[]) <span class=\"r\">do</span> |returning2|\n     returning2 &lt;&lt; <span class=\"i\">23</span>\n   <span class=\"r\">end</span>\n  <span class=\"r\">end</span>\n\n  <span class=\"r\">def</span> <span class=\"fu\">returning3</span>\n   returning(returning3=[]) <span class=\"r\">do</span>\n     returning3 &lt;&lt; <span class=\"i\">23</span>\n   <span class=\"r\">end</span>\n  <span class=\"r\">end</span></pre></div>\n</div>\n\n\n	<p>returning1,returning2,returning3 look like three different versions of returning method for ruby newbie.</p>\n\n\n	<p>returning1,returning2 are exactly same. In case of returning2 method the value assigned in returing is send to block as argument.</p>\n\n\n	<p>so if you change above implementation as below it will still work</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>  <span class=\"r\">def</span> <span class=\"fu\">returning2</span>\n   returning(returning_anything=[]) <span class=\"r\">do</span> |returning2|\n     returning2 &lt;&lt; <span class=\"i\">23</span>\n   <span class=\"r\">end</span>\n  <span class=\"r\">end</span></pre></div>\n</div>\n\n\n	<p>returning3 is interesting construct.</p>\n\n\n	<p>In case of returning3 method returning3 variable is not defined inside block, but it was coming from returning statement itself.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> returning(return3=[]) <span class=\"r\">do</span> </pre></div>\n</div>\n\n\n	<p>Below is the implementation of returning from the rails source code.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>  <span class=\"r\">def</span> <span class=\"fu\">returning</span>(value)\n    <span class=\"r\">yield</span>(value)\n    value\n  <span class=\"r\">end</span></pre></div>\n</div>\n\n\n	<p>So the inside the block returning3 is local variable defined in returning calling statement itself.</p>','awesome rails construct returning statement','2009-01-27 18:12:06',NULL,NULL),(5,'<p>suppose if you want to ignore a file by git version control, you need to put the pattern in the .gitignore file. but sometimes eventhough you included the file in ignore it seems the git is still tracking it.</p>\n\n\n	<p>It is because gitignore only ignores the files that are not tracked by git. so please check whether you already added the file to git.</p>','why my file is not ignored eventhough i included it in .gitignore','2009-02-18 15:54:03',NULL,NULL),(6,'<p>I use mac vim for my rails development.\nI use <a href=\"http://vim.wikia.com/wiki/Beautify_Ruby_code\">Ruby Beautifier</a> script to format ruby code in vim.</p>\n\n\n	<p>Below is the code where it finds which files are supposed to be treated as ruby code(if you follow above guide you would have pasted this code in your ~/.vimrc file). add <strong>.rake after </strong>.rb as shown below.\nnow your RubyBeautifier will format your rake code also.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>augroup ruby\n  <span class=\"r\">if</span> !exists(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">autocommands_ruby_loaded</span><span class=\"dl\">&quot;</span></span>)\n    let autocommands_ruby_loaded = <span class=\"i\">1</span>\n    au <span class=\"co\">BufReadPre</span> *.rb,*.rake set sw=<span class=\"i\">3</span> sts=<span class=\"i\">3</span> nu | let <span class=\"co\">IndentStyle</span> = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">ruby</span><span class=\"dl\">&quot;</span></span>\n    au <span class=\"co\">BufNewFile</span> *.rb <span class=\"i\">0</span>r ~<span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">.vim</span><span class=\"dl\">/</span><span class=\"mod\">s</span></span>keleton.rb | let <span class=\"co\">IndentStyle</span> = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">ruby</span><span class=\"dl\">&quot;</span></span>\n  endif\naugroup <span class=\"r\">END</span></pre></div>\n</div>','Ruby beautifier to work with rake task','2009-01-30 21:31:47',NULL,NULL),(7,'<p>I want to write tests to presenter in our project.\nBut it has only one public method and number of private methods.\nwhen i want to write my unit tests i want test small chunks of code.\nwhich generally made as private methods. at this point want to test my private methods. then i came across this <a href=\"http://blog.jayfields.com/2007/11/ruby-testing-private-methods.html\">blog</a></p>','testing private methods','2009-03-17 20:52:47',NULL,NULL),(8,'<p>I am recently converting from Prototype to jQuery to do all javascript related code. \nSo i want to write series of articles that can be helpful others who are in same boat.</p>\n\n\n	<p>Prototype has evalJson, evalScript utility methods in String Object of <a href=\"http://www.prototypejs.org/api/string\">Prototype.</a></p>\n\n\n	<p>There are no equilant methods in jQuery. so i went to see what Protoype is really doing in those methods.</p>\n\n\n	<p>Below is the code from the Prototype source.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> evalJSON: function(sanitize) {\n    var json = this.unfilterJSON();\n    try {\n      <span class=\"r\">if</span> (!sanitize || json.isJSON()) <span class=\"r\">return</span> eval(<span class=\"s\"><span class=\"dl\">\'</span><span class=\"k\">(</span><span class=\"dl\">\'</span></span> + json + <span class=\"s\"><span class=\"dl\">\'</span><span class=\"k\">)</span><span class=\"dl\">\'</span></span>);\n    } catch (e) { }\n    throw new SyntaxError(<span class=\"s\"><span class=\"dl\">\'</span><span class=\"k\">Badly formed JSON string: </span><span class=\"dl\">\'</span></span> + this.inspect());\n  }</pre></div>\n</div>\n\nWe can implement similar functionality in jQuery.\n\njQuery ajax Object has dataType option which we can use to get evalJSON,evalScript Functionality in jQuery.\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>jQuery.ajax(url_to_json,params_to_server,\n        function(jsonObject){\n          <span class=\"rx\"><span class=\"dl\">/</span><span class=\"dl\">/</span><span class=\"mod\">some</span></span> call back\n        },<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">json</span><span class=\"dl\">&quot;</span></span>);</pre></div>\n</div>\n\nThe last arguement to ajax method is dataType(i used json). If you use this jQuery will handle the conversion of string response to json object.\n\n	<p>So the callback function will get converted jsonObject as its arguement(not the the actual string server sent).</p>\n\n\nSimilarly you can use script as dataType if server sends Javascript as response.\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>jQuery.ajax(url_to_json,params_to_server,\n        function(scriptAlreadyexecuted){\n          <span class=\"rx\"><span class=\"dl\">/</span><span class=\"dl\">/</span><span class=\"mod\">s</span></span>criptAlreadyexecuted\n          <span class=\"rx\"><span class=\"dl\">/</span><span class=\"dl\">/</span><span class=\"mod\">m</span></span>ay be you may have to <span class=\"r\">do</span> some work here\n        },<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">script</span><span class=\"dl\">&quot;</span></span>);</pre></div>\n</div>\n\n\n	<p>jQuery also has Utility methods <code> jQuery.getJSON,jQuery.getScript </code>  which will call internally jQuery.ajax method with dataType json,script respectivelly.</p>','evalJson,evalScript in jQuery','2009-03-17 20:52:53',NULL,NULL),(9,'<p>George: Do you know that we can use variables without declaring them in javascript.</p>\n\n\n	<p>Seinfield: Wow. Get out of here.</p>\n\n\n	<p>Krammer: They also become global variables without typing any \nadditional key strokes.</p>\n\n\n	<p>Seinfield: <span class=\"caps\">WTF</span>&#8230;...</p>\n\n\n	<p>George: Sweet &#8230;..,now i can save some more key strokes.</p>\n\n\n	<p>Krammer: Yeap</p>','Why should i learn JavaScript before i use JavaScript (Seinfield way)','2009-03-17 21:06:14',NULL,NULL),(10,'<p>jQuery has this nth-child selector which amazingly simplifies the select process.</p>\n\n\n	<p>This will eliminate need to iterate through child nodes to find certain elements in javascript.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>&lt;ul&gt;\n &lt;li&gt;<span class=\"co\">First</span>&lt;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">li&gt;\n &lt;li&gt;Second&lt;</span><span class=\"dl\">/</span></span>li&gt;\n &lt;li&gt;<span class=\"co\">Third</span>&lt;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">li&gt;\n&lt;</span><span class=\"dl\">/</span><span class=\"mod\">u</span></span>l&gt;</pre></div>\n</div>\n\n\nSuppose if you want to select second li inside ul. \n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>jQuery(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">ul li:nth-child(2)</span><span class=\"dl\">&quot;</span></span>)</pre></div>\n</div>','jQuery nth-child','2009-03-18 00:46:52',NULL,NULL),(11,'<p>jQuery has numerous selectors that we need to aware. These selectors make selecting nodes very compact.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>&lt;div <span class=\"r\">class</span>=<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span> style=<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">display: none</span><span class=\"dl\">&quot;</span></span>&gt;\n&lt;p&gt; <span class=\"co\">I</span> am hidden &lt;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">p&gt;\n&lt;</span><span class=\"dl\">/</span></span>div&gt; \n\n&lt;div <span class=\"r\">class</span>=<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span>&gt;\n&lt;p&gt; <span class=\"co\">I</span> am visible &lt;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">p&gt;\n&lt;</span><span class=\"dl\">/</span></span>div&gt; </pre></div>\n</div>\n\n\n	<p>jQuery(&#8221;.test:hidden&#8221;) will select the hidden node.</p>\n\n\n	<p>jQuery(&#8221;.test:visible&#8221;) will select the visible node.</p>','jQuery :hidden/:visible selector','2009-03-18 00:45:43',NULL,NULL),(12,'<p>JavaScript has many constructs which can be used creatively to write better code.I will explain one construct here.</p>\n\n\n	<p>Let me define a object node in Javscript which has two methods.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>var node = {\n hide: function(){\n  alert(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">hide</span><span class=\"dl\">&quot;</span></span>);\n },\n show: function(){\n  alert(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">show</span><span class=\"dl\">&quot;</span></span>);\n }\n};</pre></div>\n</div>\n\n\nThere are two ways of accessing above methods in node object.\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> node.hide();\n node[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">hide</span><span class=\"dl\">&quot;</span></span>]();</pre></div>\n</div>\n\nThe second method of accessing the method allows possibility of writing creative constructs in Javascript.\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> var shouldIshow = <span class=\"pc\">true</span>;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"dl\">/</span></span>you can have logic to construct this value\n\n node[ shouldIshow ? <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">show</span><span class=\"dl\">&quot;</span></span> : <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">hide</span><span class=\"dl\">&quot;</span></span> ]();</pre></div>\n</div>\n\n\nIf you want to write above construct using if else it would look like as shown below.\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> var shouldIShow = <span class=\"pc\">true</span>;<span class=\"rx\"><span class=\"dl\">/</span><span class=\"dl\">/</span></span>you can have logic to construct this value\n <span class=\"r\">if</span>(shouldIShow){\n  node.show();\n }<span class=\"r\">else</span>{\n  node.hide();\n }</pre></div>\n</div>','Writing better javascript','2009-03-19 15:47:06',NULL,NULL),(13,'<p>There is lambda available in Javascript language. In this article i will try to explain that.</p>','Lambda in Javascript','2009-03-19 16:10:24',NULL,NULL),(14,'<p>Recently in my project i needed to implement put / delete using ajax. Browsers don&#8217;t support put/delete methods.</p>\n\n\n	<p>If you look into rails code it supports these methods by adding hidden variable _method.\nI am delegating the put/delete methods to jQuery post by adding _method variable.</p>\n\n\n	<pre><code>so i added two utility methods to my jQuery to support put/delete.</code></pre>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre> jQuery.put = function(url,data,callback,dataType){\n     jQuery.post(url+<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">?_method=put</span><span class=\"dl\">&quot;</span></span>,data,callback,dataType);\n  };\n  jQuery.delete = function(url,data,callback,dataType){\n      jQuery.post(url+<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">?_method=delete</span><span class=\"dl\">&quot;</span></span>,data,callback,dataType);\n  };</pre></div>\n</div>','Missing REST methods put/delete in jQuery','2009-04-01 20:51:56',NULL,NULL),(15,'<p>I watched bunch of videos of Douglas Crackford.\n<a href=\"http://developer.yahoo.com/yui/theater/\">videos</a></p>\n\n\n	<p>I read this awesome book on Javascript.\n<a href=\"http://www.amazon.com/Object-Oriented-JavaScript-high-quality-applications-libraries/dp/1847194141\">book</a></p>','How do i stopped worrying about JavaScript and Started loving it.','2009-03-31 13:32:14',NULL,NULL),(16,'<p>rails heavily uses  HashWithIndifferentAccess whenever they want to use hash.</p>\n\n\nI saw update method they use instead of indexed assignment\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>hash = <span class=\"co\">Hash</span>.new\nhash[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span>] = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span>\nhash.merge!(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span>)\n\nh=<span class=\"co\">HashWithIndifferentAccess</span>.new\nh.update(<span class=\"sy\">:test</span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">test</span><span class=\"dl\">&quot;</span></span>)</pre></div>\n</div>\n\n\n	<p>update method of HashWithIndifferentAccess is equal to merge! but with bang(!) in update method name.</p>','HashWithIndifferentAccess update ','2009-04-17 15:38:52',NULL,NULL),(17,'<p>Shoulda provides many helper macros outof box to reduce pain of testing.</p>\n\n\n	<p>Most of them are straight forward to use like should_set_the_flash_to, should_respond_with,should_respond_with_content_type.</p>\n\n\n	<p>But should_redirect_to is a tricky one to use. from the documentation of shoulda it shows its usage as shown.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>should_redirect_to(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">the user\'s profile</span><span class=\"dl\">&quot;</span></span>) { user_url(<span class=\"iv\">@user</span>) }</pre></div>\n</div>\n\n\n	<p>okay suppose you want to test whether particular action will redirect to login page. assuming you defined path in your routes as login_url you test it as shown below.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>should_redirect_to(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">to login page</span><span class=\"dl\">&quot;</span></span>) { login_url }</pre></div>\n</div>\n\n\n	<p>Suppose if you ever come across url that you dont have route defined.</p>\n\n\n	<p>for example you want test your action is redirecting to &#8220;people/search&#8221; page. For demonstration purpose let us assume there is no route defined for this corresponding url.</p>\n\n\n	<p>Then to write test for this url if you use</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>should_redirect_to(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">to search page</span><span class=\"dl\">&quot;</span></span>) { <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">people/search</span><span class=\"dl\">&quot;</span></span> }\n\n<span class=\"co\">NameError</span>: undefined local variable <span class=\"r\">or</span> method <span class=\"sh\"><span class=\"dl\">`</span><span class=\"k\">peple\' </span></span></pre></div>\n</div>\n\n\n	<p>If you look into the helper method definition  it is as shown below\n should_redirect_to(description, &#38;block)</p>\n\n\n	<p>in shoulda they call instance_eval on the &#38;block.\nin the above example the block passed { &#8220;people/search&#8221; }</p>\n\n\n	<p>so if you call instance eval on the people/search it will try to call people method as comes across. thats why we are getting that error. To fix the problem we need to cheat instance_eval so that it treats url we provided as string.</p>\n\n\n<div class=\"CodeRay\">\n  <div class=\"code\"><pre>should_redirect_to(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">to search page</span><span class=\"dl\">&quot;</span></span>) { <span class=\"s\"><span class=\"dl\">\'</span><span class=\"k\">&quot;people/search&quot;</span><span class=\"dl\">\'</span></span> }</pre></div>\n</div>\n\n\n	<p>this will work as expected.</p>','using should_redirect_to in Shoulda ','2009-05-01 19:04:40',NULL,NULL);
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2009-07-16 20:50:36
